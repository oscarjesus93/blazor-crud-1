@page "/usuario/nuevo";
@page "/usuario/editar/{Id:int}";
@using CrudNet6.Shared;


@inject HttpClient HttpClient;
@inject NavigationManager NavigationManager;

<h1>@title Usuario</h1>
<hr/>

<EditForm Model="@user" OnValidSubmit="SaveUser">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="Nombre" class="form-label">Nombre</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="user.Nombre" />
        </div>
        <ValidationMessage For="@(() => user.Nombre)" />
    </div>

    <div class="mb-3">
        <label for="Nombre" class="form-label">Apellido</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="user.Apellido" />
        </div>
        <ValidationMessage For="@(() => user.Apellido)" />
    </div>

    <div class="mb-3">
        <label for="Nombre" class="form-label">Telefono</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="user.Telefono" />
        </div>
        <ValidationMessage For="@(() => user.Telefono)" />
    </div>

    <div class="mb-3">
        <label for="Nombre" class="form-label">Email</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="user.Email" />
        </div>
        <ValidationMessage For="@(() => user.Email)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <button type="submit" class="btn btn-light">Guardar</button>
    </div>

</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    protected string title = "Nuevo";
    protected User user = new User();

    protected override async Task OnParametersSetAsync()
    {
        if(Id != 0)
        {
            title = "Editar";
            user = await HttpClient.GetFromJsonAsync<User>($"api/User/{Id.ToString()}");
        }
    }

    protected async Task SaveUser()
    {
        if (user.Id != 0)
        {
            await HttpClient.PutAsJsonAsync("api/User", user);
        }
        else
        {
            await HttpClient.PostAsJsonAsync("api/User", user);
        }

        Cancel();
    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }

}


